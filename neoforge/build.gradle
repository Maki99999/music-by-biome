plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id 'com.gradleup.shadow'
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})"
        }
        client {
            client()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation 'com.google.auto.service:auto-service-annotations:1.1.1'
    annotationProcessor 'com.google.auto.service:auto-service:1.1.1'
    shadow(implementation('com.fasterxml.jackson.core:jackson-databind:2.13.4.2'))
    shadow(implementation('com.github.goxr3plus:java-stream-player:9.0.4') {
        exclude group: 'junit', module: 'junit'
    })
}

shadowJar {
    configurations = [project.configurations.shadow]
    mergeServiceFiles()
    relocate("com.fasterxml.jackson", "${project.property('group')}.com.fasterxml.jackson")
    relocate("com.github.trilarion.sound", "${project.property('group')}.com.github.trilarion.sound")
    relocate("com.goxr3plus.streamplayer", "${project.property('group')}.com.goxr3plus.streamplayer")
    relocate("com.jcraft", "${project.property('group')}.com.jcraft")
    relocate("javazoom", "${project.property('group')}.javazoom")
    relocate("org.apache.commons.io", "${project.property('group')}.org.apache.commons.io")
    relocate("org.jaudiotagger", "${project.property('group')}.org.jaudiotagger")
    relocate("org.jflac", "${project.property('group')}.org.jflac")
    relocate("org.tritonus", "${project.property('group')}.org.tritonus")

    from project.file('build/tmp/compileJava/refmap.biomebeats.mixins.json')

    from(sourceSets.main.output)
    archiveFileName = "${mod_id}-neoforge-${minecraft_version}-${version}.jar"
}
