import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom'
    id 'com.gradleup.shadow'
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    implementation 'com.google.auto.service:auto-service-annotations:1.1.1'
    annotationProcessor 'com.google.auto.service:auto-service:1.1.1'
    shadow(implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2')
    shadow(implementation('com.github.goxr3plus:java-stream-player:9.0.4') {
        exclude group: 'junit', module: 'junit'
    })
    implementation project(":common")
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
    }
}

jar {
    manifest {
        attributes(['MixinConfigs' : "${project.mod_id}.mixins.json"])
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}

shadowJar {
    archiveFileName = "${mod_id}-fabric-${minecraft_version}-${version}-all.jar"
    configurations = [project.configurations.shadow]
    mergeServiceFiles()

    relocate("com.fasterxml.jackson", "${project.property('group')}.com.fasterxml.jackson")
    relocate("com.github.trilarion.sound", "${project.property('group')}.com.github.trilarion.sound")
    relocate("com.goxr3plus.streamplayer", "${project.property('group')}.com.goxr3plus.streamplayer")
    relocate("com.jcraft", "${project.property('group')}.com.jcraft")
    relocate("javazoom", "${project.property('group')}.javazoom")
    relocate("org.apache.commons.io", "${project.property('group')}.org.apache.commons.io")
    relocate("org.jaudiotagger", "${project.property('group')}.org.jaudiotagger")
    relocate("org.jflac", "${project.property('group')}.org.jflac")
    relocate("org.tritonus", "${project.property('group')}.org.tritonus")
}

tasks.register('remappedShadowJar', RemapJarTask) {
    dependsOn tasks.shadowJar
    input = tasks.shadowJar.archiveFile
    addNestedDependencies = true
    archiveFileName = "${mod_id}-fabric-${minecraft_version}-${version}.jar"
}

tasks.assemble.dependsOn tasks.remappedShadowJar